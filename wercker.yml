# The container definition we want to use for developing our app
box: golang:1.7
build:
  base-path: /go/src/github.com/recruit-mp/sewer
  steps:
    - script:
        name: setup tools
        code: |
          go get -u github.com/kardianos/govendor
          go get -u github.com/mitchellh/gox
    # - script:
    #   name: install dependencies
    #   code: govendor sync
    - script:
        name: test
        code: |
          govendor test -v +local
    - script:
        name: build
        code: |
          gox -arch="amd64" -os="linux darwin" -output="pkg/{{.OS}}_{{.Arch}}/sewer"
          SHORT=$(git rev-parse --short=8 HEAD)
          GIT_TAG=$(git describe --abbrev=0 --tags |tr '-' '\n' | head -n1 | tr -d '\n')
          RELEASE_TAG=${GIT_TAG}-${SHORT}
          echo -n ${RELEASE_TAG} > ./release_tag
deploy:
  box: ubuntu
  steps:
    - install-packages:
        checkpoint: pkgs
        packages: curl file
    - script:
        name: fetch release tag
        code: |
          export RELEASE_TAG=$(cat ./release_tag)
          tar cvzf pkg/sewer_darwin_amd64.tar.gz pkg/darwin_amd64/sewer
          tar cvzf pkg/sewer_linux_amd64.tar.gz pkg/linux_amd64/sewer
    - wercker/github-create-release:
        token: $GITHUB_TOKEN
        tag: $RELEASE_TAG
        draft: true
    - wercker/github-upload-asset:
        token: $GITHUB_TOKEN
        file: pkg/sewer_darwin_amd64.tar.gz
    - wercker/github-upload-asset:
        token: $GITHUB_TOKEN
        file: pkg/sewer_linux_amd64.tar.gz